#! /bin/sh

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="celery_beat"
TASK_MODULE="flowlogd.tasks"
LOG_LEVEL="info"
CMD="/usr/bin/celery"
OPTS="-A $TASK_MODULE beat --loglevel=$LOG_LEVEL"
PIDFILE="/var/run/$NAME.pid"
LOGDIR="/var/log/celery/"
LOGFILE="$LOGDIR$NAME.log"
USER="root"

if [ ! -d $LOGDIR ]
then
  mkdir -p $LOGDIR
fi

get_pid() {
    cat "$PIDFILE"
}

is_running() {
    [ -f "$PIDFILE" ] && ps `get_pid` > /dev/null 2>&1
}

do_start()
{
        # Return
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
    if is_running; then
      return 1
    fi

    start-stop-daemon --start --quiet \
           --pidfile $PIDFILE \
           --make-pidfile \
           --background \
           --chuid $USER \
           --no-close \
           --exec $CMD -- $OPTS >> $LOGFILE 2>&1 \
            || return 2
}

do_stop()
{
        # Return
        #   0 if daemon has been stopped
        #   1 if daemon was already stopped
        #   2 if daemon could not be stopped
        #   other if a failure occurred
        is_running || return 1
        start-stop-daemon --stop --quiet --pidfile $PIDFILE
        RETVAL="$?"
        [ "$RETVAL" = 2 ] && return 2
        # Many daemons don't delete their pidfiles when they exit.
        [ "$RETVAL" = 0 ] && rm -f $PIDFILE
        return "$RETVAL"
}

case "$1" in
  start)
        do_start
        case "$?" in
                0) echo "Started" ;;
                1) echo "Already Running" ;;
                2) echo "Unable to start" ;;
        esac
        ;;
  stop)
        do_stop
        case "$?" in
                0) echo "Stopped" ;;
                1) echo "Already Stopped" ;;
                2) echo "Unable to stop" ;;
        esac
        ;;
  status)
        if is_running; then
            echo "Running"
        else
            echo "Stopped"
            exit 1
        fi
        ;;
  restart)
        $0 stop
        if is_running; then
            echo "Unable to stop, will not attempt to start"
            exit 1
        fi
            $0 start
        ;;
esac

